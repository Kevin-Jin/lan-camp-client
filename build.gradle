apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
    flatDir {
        dirs "${rootProject.projectDir}/lib"
    }
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'

    compile "net.java.dev.jna:jna:4.1.0"
    compile "net.java.dev.jna:jna-platform:4.1.0"
    compile "org.pcap4j:pcap4j-core:1.3.0"
    compile "org.pcap4j:pcap4j-packetfactory-static:1.3.0"
    compile name: 'JNativeHook'
}

test {
    systemProperties 'property': 'value'
}

task createWrapper(type: Wrapper) {
    gradleVersion = '2.1'
}

task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'LanCamp',  
        'Implementation-Version': version,
        'Main-Class': 'in.kevinj.lancamp.ToolGui'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task (run, dependsOn: jar, type: JavaExec) {
    main = 'in.kevinj.lancamp.ToolGui'
    standardInput = System.in
    classpath = sourceSets.main.runtimeClasspath
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

sourceSets {
    main { 
        output.resourcesDir = "build/classes/main" 
    }
}
